<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3473ac9c-5f98-4397-b462-e088cccabc3d" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/ContainerWithMostWater11.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="345._Reverse_Vowels_of_a_String_" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2R5iVzZY5DD3dvDNPJOkHC084q7" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "11.__Container__With__Most__Water",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/springApps/LeetCodeSolutions"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\springApps\LeetCodeSolutions" />
      <recent name="C:\springApps\LeetCodeSolutions\src\main\java\org\example" />
    </key>
  </component>
  <component name="RunManager" selected="Application.ContainerWithMostWater11">
    <configuration name="CanPlaceFlowers605" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.CanPlaceFlowers605" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContainerWithMostWater11" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.ContainerWithMostWater11" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Program" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.Program" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="RegularExpressionMatching10" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.RegularExpressionMatching10" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReverseInteger7" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.ReverseInteger7" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ContainerWithMostWater11" />
        <item itemvalue="Application.ReverseInteger7" />
        <item itemvalue="Application.RegularExpressionMatching10" />
        <item itemvalue="Application.CanPlaceFlowers605" />
        <item itemvalue="Application.Program" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3473ac9c-5f98-4397-b462-e088cccabc3d" name="Changes" comment="" />
      <created>1686546374206</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1686546374206</updated>
    </task>
    <task id="LOCAL-00001" summary="125. Valid Palindrome">
      <created>1689712950973</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1689712950973</updated>
    </task>
    <task id="LOCAL-00002" summary="392 Is Subsequence">
      <created>1689713342778</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1689713342778</updated>
    </task>
    <task id="LOCAL-00003" summary="&#10;167. Two Sum II - Input Array Is Sorted">
      <created>1689716995407</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1689716995407</updated>
    </task>
    <task id="LOCAL-00004" summary="1732. Find the Highest Altitude">
      <created>1689718232550</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1689718232550</updated>
    </task>
    <task id="LOCAL-00005" summary="724. Find Pivot Index">
      <created>1689778962096</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1689778962096</updated>
    </task>
    <task id="LOCAL-00006" summary="724. Find Pivot Index">
      <created>1689778974982</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1689778974982</updated>
    </task>
    <task id="LOCAL-00007" summary="389. Find the Difference&#10;Easy&#10;4K&#10;434&#10;Companies&#10;You are given two strings s and t.&#10;&#10;String t is generated by random shuffling string s and then add one more letter at a random position.&#10;&#10;Return the letter that was added to t.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: s = &quot;abcd&quot;, t = &quot;abcde&quot;&#10;Output: &quot;e&quot;&#10;Explanation: 'e' is the letter that was added.&#10;Example 2:&#10;&#10;Input: s = &quot;&quot;, t = &quot;y&quot;&#10;Output: &quot;y&quot;&#10; &#10;&#10;Constraints:&#10;&#10;0 &lt;= s.length &lt;= 1000&#10;t.length == s.length + 1&#10;s and t consist of lowercase English letters.">
      <created>1689781635816</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1689781635816</updated>
    </task>
    <task id="LOCAL-00008" summary="242. Valid Anagram">
      <created>1689785810638</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1689785810638</updated>
    </task>
    <task id="LOCAL-00009" summary="459 Repeated SubstringPattern">
      <created>1689794027450</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1689794027451</updated>
    </task>
    <task id="LOCAL-00010" summary="101 SymmetricTree">
      <created>1689796419531</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1689796419531</updated>
    </task>
    <task id="LOCAL-00011" summary="896 MonotonicArray">
      <created>1689802767604</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1689802767604</updated>
    </task>
    <task id="LOCAL-00012" summary="1822 SignOfTheProductOfAnArray">
      <created>1689803261004</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1689803261004</updated>
    </task>
    <task id="LOCAL-00013" summary="1502 ArithmeticProgressionFromSequence">
      <created>1689803811015</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1689803811015</updated>
    </task>
    <task id="LOCAL-00014" summary="709 To Lower Case">
      <created>1689804091651</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1689804091651</updated>
    </task>
    <task id="LOCAL-00015" summary="1523. Count Odd Numbers in an Interval Range">
      <created>1689913750689</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1689913750689</updated>
    </task>
    <task id="LOCAL-00016" summary="657. Robot Return to Origin&#10;Easy&#10;2.2K&#10;734&#10;Companies&#10;There is a robot starting at the position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.&#10;&#10;You are given a string moves that represents the move sequence of the robot where moves[i] represents its ith move. Valid moves are 'R' (right), 'L' (left), 'U' (up), and 'D' (down).&#10;&#10;Return true if the robot returns to the origin after it finishes all of its moves, or false otherwise.&#10;&#10;Note: The way that the robot is &quot;facing&quot; is irrelevant. 'R' will always make the robot move to the right once, 'L' will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same for each move.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: moves = &quot;UD&quot;&#10;Output: true&#10;Explanation: The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.&#10;Example 2:&#10;&#10;Input: moves = &quot;LL&quot;&#10;Output: false&#10;Explanation: The robot moves left twice. It ends up two &quot;moves&quot; to the left of the origin. We return false because it is not at the origin at the end of its moves.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= moves.length &lt;= 2 * 104&#10;moves only contains the characters 'U', 'D', 'L' and 'R'.">
      <created>1690170176862</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1690170176862</updated>
    </task>
    <task id="LOCAL-00017" summary="860. Lemonade Change&#10;Easy&#10;2K&#10;145&#10;Companies&#10;At a lemonade stand, each lemonade costs $5. Customers are standing in a queue to buy from you and order one at a time (in the order specified by bills). Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill. You must provide the correct change to each customer so that the net transaction is that the customer pays $5.&#10;&#10;Note that you do not have any change in hand at first.&#10;&#10;Given an integer array bills where bills[i] is the bill the ith customer pays, return true if you can provide every customer with the correct change, or false otherwise.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: bills = [5,5,5,10,20]&#10;Output: true&#10;Explanation: &#10;From the first 3 customers, we collect three $5 bills in order.&#10;From the fourth customer, we collect a $10 bill and give back a $5.&#10;From the fifth customer, we give a $10 bill and a $5 bill.&#10;Since all customers got correct change, we output true.&#10;Example 2:&#10;&#10;Input: bills = [5,5,10,10,20]&#10;Output: false&#10;Explanation: &#10;From the first two customers in order, we collect two $5 bills.&#10;For the next two customers in order, we collect a $10 bill and give back a $5 bill.&#10;For the last customer, we can not give the change of $15 back because we only have two $10 bills.&#10;Since not every customer received the correct change, the answer is false.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= bills.length &lt;= 105&#10;bills[i] is either 5, 10, or 20.&#10;Accepted&#10;140.7K&#10;Submissions&#10;265.5K&#10;Acceptance Rate&#10;53.0%">
      <created>1690172670160</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1690172670160</updated>
    </task>
    <task id="LOCAL-00018" summary="21. Merge Two Sorted Lists&#10;Easy&#10;19.2K&#10;1.8K&#10;Companies&#10;You are given the heads of two sorted linked lists list1 and list2.&#10;&#10;Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.&#10;&#10;Return the head of the merged linked list.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: list1 = [1,2,4], list2 = [1,3,4]&#10;Output: [1,1,2,3,4,4]&#10;Example 2:&#10;&#10;Input: list1 = [], list2 = []&#10;Output: []&#10;Example 3:&#10;&#10;Input: list1 = [], list2 = [0]&#10;Output: [0]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in both lists is in the range [0, 50].&#10;-100 &lt;= Node.val &lt;= 100&#10;Both list1 and list2 are sorted in non-decreasing order.">
      <created>1690407187193</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1690407187193</updated>
    </task>
    <task id="LOCAL-00019" summary="2. Add Two Numbers&#10;Medium&#10;27.3K&#10;5.2K&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [7,0,8]&#10;Explanation: 342 + 465 = 807.&#10;Example 2:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10;Example 3:&#10;&#10;Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]&#10;Output: [8,9,9,9,0,0,0,1]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.&#10;Accepted&#10;3.8M&#10;Submissions&#10;9.2M&#10;Acceptance Rate&#10;40.9%">
      <created>1690469279201</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1690469279201</updated>
    </task>
    <task id="LOCAL-00020" summary="2. Add Two Numbers&#10;Medium&#10;27.3K&#10;5.2K&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [7,0,8]&#10;Explanation: 342 + 465 = 807.&#10;Example 2:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10;Example 3:&#10;&#10;Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]&#10;Output: [8,9,9,9,0,0,0,1]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.&#10;Accepted&#10;3.8M&#10;Submissions&#10;9.2M&#10;Acceptance Rate&#10;40.9%">
      <created>1690469322113</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1690469322113</updated>
    </task>
    <task id="LOCAL-00021" summary="2. Add Two Numbers&#10;Medium&#10;27.3K&#10;5.2K&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [7,0,8]&#10;Explanation: 342 + 465 = 807.&#10;Example 2:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10;Example 3:&#10;&#10;Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]&#10;Output: [8,9,9,9,0,0,0,1]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.&#10;Accepted&#10;3.8M&#10;Submissions&#10;9.2M&#10;Acceptance Rate&#10;40.9%">
      <created>1690469345688</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1690469345688</updated>
    </task>
    <task id="LOCAL-00022" summary="445. Add Two Numbers II&#10;Medium&#10;5.5K&#10;278&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [7,2,4,3], l2 = [5,6,4]&#10;Output: [7,8,0,7]&#10;Example 2:&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [8,0,7]&#10;Example 3:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.">
      <created>1690470539887</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1690470539887</updated>
    </task>
    <task id="LOCAL-00023" summary="1232. Check If It Is a Straight Line&#10;Easy&#10;2.4K&#10;260&#10;Companies&#10;You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.&#10;&#10; &#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;&#10;Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]&#10;Output: true&#10;Example 2:&#10;&#10;&#10;&#10;Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]&#10;Output: false&#10; &#10;&#10;Constraints:&#10;&#10;2 &lt;= coordinates.length &lt;= 1000&#10;coordinates[i].length == 2&#10;-10^4 &lt;= coordinates[i][0], coordinates[i][1] &lt;= 10^4&#10;coordinates contains no duplicate point.&#10;Accepted&#10;233.6K&#10;Submissions&#10;583.3K&#10;Acceptance Rate&#10;40.0%">
      <created>1690474169600</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1690474169600</updated>
    </task>
    <task id="LOCAL-00024" summary="2181. Merge Nodes in Between Zeros&#10;Medium&#10;1.4K&#10;26&#10;Companies&#10;You are given the head of a linked list, which contains a series of integers separated by 0's. The beginning and end of the linked list will have Node.val == 0.&#10;&#10;For every two consecutive 0's, merge all the nodes lying in between them into a single node whose value is the sum of all the merged nodes. The modified list should not contain any 0's.&#10;&#10;Return the head of the modified linked list.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: head = [0,3,1,0,4,5,2,0]&#10;Output: [4,11]&#10;Explanation: &#10;The above figure represents the given linked list. The modified list contains&#10;- The sum of the nodes marked in green: 3 + 1 = 4.&#10;- The sum of the nodes marked in red: 4 + 5 + 2 = 11.&#10;Example 2:&#10;&#10;&#10;Input: head = [0,1,0,3,0,2,2,0]&#10;Output: [1,3,4]&#10;Explanation: &#10;The above figure represents the given linked list. The modified list contains&#10;- The sum of the nodes marked in green: 1 = 1.&#10;- The sum of the nodes marked in red: 3 = 3.&#10;- The sum of the nodes marked in yellow: 2 + 2 = 4.&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in the list is in the range [3, 2 * 105].&#10;0 &lt;= Node.val &lt;= 1000&#10;There are no two consecutive nodes with Node.val == 0.&#10;The beginning and end of the linked list have Node.val == 0.&#10;Accepted&#10;83.1K&#10;Submissions&#10;96.6K&#10;Acceptance Rate&#10;86.0%">
      <created>1690476304721</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1690476304724</updated>
    </task>
    <task id="LOCAL-00025" summary="MaximumTwinSumOfALinkedList2130">
      <created>1690484649147</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1690484649148</updated>
    </task>
    <task id="LOCAL-00026" summary="705. Design HashSet&#10;Easy&#10;3.5K&#10;283&#10;Companies&#10;Design a HashSet without using any built-in hash table libraries.&#10;&#10;Implement MyHashSet class:&#10;&#10;void add(key) Inserts the value key into the HashSet.&#10;bool contains(key) Returns whether the value key exists in the HashSet or not.&#10;void remove(key) Removes the value key in the HashSet. If key does not exist in the HashSet, do nothing.&#10; &#10;&#10;Example 1:&#10;&#10;Input&#10;[&quot;MyHashSet&quot;, &quot;add&quot;, &quot;add&quot;, &quot;contains&quot;, &quot;contains&quot;, &quot;add&quot;, &quot;contains&quot;, &quot;remove&quot;, &quot;contains&quot;]&#10;[[], [1], [2], [1], [3], [2], [2], [2], [2]]&#10;Output&#10;[null, null, null, true, false, null, true, null, false]&#10;&#10;Explanation&#10;MyHashSet myHashSet = new MyHashSet();&#10;myHashSet.add(1);      // set = [1]&#10;myHashSet.add(2);      // set = [1, 2]&#10;myHashSet.contains(1); // return True&#10;myHashSet.contains(3); // return False, (not found)&#10;myHashSet.add(2);      // set = [1, 2]&#10;myHashSet.contains(2); // return True&#10;myHashSet.remove(2);   // set = [1]&#10;myHashSet.contains(2); // return False, (already removed)&#10; &#10;&#10;Constraints:&#10;&#10;0 &lt;= key &lt;= 106&#10;At most 104 calls will be made to add, remove, and contains.&#10;Accepted&#10;355.2K&#10;Submissions&#10;528.4K&#10;Acceptance Rate&#10;67.2%">
      <created>1690494589434</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1690494589435</updated>
    </task>
    <task id="LOCAL-00027" summary="50. Pow(x, n)&#10;Medium&#10;8.4K&#10;8.3K&#10;Companies&#10;Implement pow(x, n), which calculates x raised to the power n (i.e., xn).&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: x = 2.00000, n = 10&#10;Output: 1024.00000&#10;Example 2:&#10;&#10;Input: x = 2.10000, n = 3&#10;Output: 9.26100&#10;Example 3:&#10;&#10;Input: x = 2.00000, n = -2&#10;Output: 0.25000&#10;Explanation: 2-2 = 1/22 = 1/4 = 0.25&#10; &#10;&#10;Constraints:&#10;&#10;-100.0 &lt; x &lt; 100.0&#10;-231 &lt;= n &lt;= 231-1&#10;n is an integer.&#10;Either x is not zero or n &gt; 0.&#10;-104 &lt;= xn &lt;= 104&#10;Accepted&#10;1.3M&#10;Submissions&#10;3.9M&#10;Acceptance Rate&#10;33.9%">
      <created>1690815156755</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1690815156755</updated>
    </task>
    <task id="LOCAL-00028" summary="682. Baseball Game&#10;Easy&#10;2.5K&#10;1.8K&#10;Companies&#10;You are keeping the scores for a baseball game with strange rules. At the beginning of the game, you start with an empty record.&#10;&#10;You are given a list of strings operations, where operations[i] is the ith operation you must apply to the record and is one of the following:&#10;&#10;An integer x.&#10;Record a new score of x.&#10;'+'.&#10;Record a new score that is the sum of the previous two scores.&#10;'D'.&#10;Record a new score that is the double of the previous score.&#10;'C'.&#10;Invalidate the previous score, removing it from the record.&#10;Return the sum of all the scores on the record after applying all the operations.&#10;&#10;The test cases are generated such that the answer and all intermediate calculations fit in a 32-bit integer and that all operations are valid.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: ops = [&quot;5&quot;,&quot;2&quot;,&quot;C&quot;,&quot;D&quot;,&quot;+&quot;]&#10;Output: 30&#10;Explanation:&#10;&quot;5&quot; - Add 5 to the record, record is now [5].&#10;&quot;2&quot; - Add 2 to the record, record is now [5, 2].&#10;&quot;C&quot; - Invalidate and remove the previous score, record is now [5].&#10;&quot;D&quot; - Add 2 * 5 = 10 to the record, record is now [5, 10].&#10;&quot;+&quot; - Add 5 + 10 = 15 to the record, record is now [5, 10, 15].&#10;The total sum is 5 + 10 + 15 = 30.&#10;Example 2:&#10;&#10;Input: ops = [&quot;5&quot;,&quot;-2&quot;,&quot;4&quot;,&quot;C&quot;,&quot;D&quot;,&quot;9&quot;,&quot;+&quot;,&quot;+&quot;]&#10;Output: 27&#10;Explanation:&#10;&quot;5&quot; - Add 5 to the record, record is now [5].&#10;&quot;-2&quot; - Add -2 to the record, record is now [5, -2].&#10;&quot;4&quot; - Add 4 to the record, record is now [5, -2, 4].&#10;&quot;C&quot; - Invalidate and remove the previous score, record is now [5, -2].&#10;&quot;D&quot; - Add 2 * -2 = -4 to the record, record is now [5, -2, -4].&#10;&quot;9&quot; - Add 9 to the record, record is now [5, -2, -4, 9].&#10;&quot;+&quot; - Add -4 + 9 = 5 to the record, record is now [5, -2, -4, 9, 5].&#10;&quot;+&quot; - Add 9 + 5 = 14 to the record, record is now [5, -2, -4, 9, 5, 14].&#10;The total sum is 5 + -2 + -4 + 9 + 5 + 14 = 27.&#10;Example 3:&#10;&#10;Input: ops = [&quot;1&quot;,&quot;C&quot;]&#10;Output: 0&#10;Explanation:&#10;&quot;1&quot; - Add 1 to the record, record is now [1].&#10;&quot;C&quot; - Invalidate and remove the previous score, record is now [].&#10;Since the record is empty, the total sum is 0.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= operations.length &lt;= 1000&#10;operations[i] is &quot;C&quot;, &quot;D&quot;, &quot;+&quot;, or a string representing an integer in the range [-3 * 104, 3 * 104].&#10;For operation &quot;+&quot;, there will always be at least two previous scores on the record.&#10;For operations &quot;C&quot; and &quot;D&quot;, there will always be at least one previous score on the record.">
      <created>1690908904294</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1690908904294</updated>
    </task>
    <task id="LOCAL-00029" summary="771. Jewels and Stones&#10;Easy&#10;4.7K&#10;556&#10;Companies&#10;You're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. Each character in stones is a type of stone you have. You want to know how many of the stones you have are also jewels.&#10;&#10;Letters are case sensitive, so &quot;a&quot; is considered a different type of stone from &quot;A&quot;.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: jewels = &quot;aA&quot;, stones = &quot;aAAbbbb&quot;&#10;Output: 3&#10;Example 2:&#10;&#10;Input: jewels = &quot;z&quot;, stones = &quot;ZZ&quot;&#10;Output: 0&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= jewels.length, stones.length &lt;= 50&#10;jewels and stones consist of only English letters.&#10;All the characters of jewels are unique.">
      <created>1691680866320</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1691680866321</updated>
    </task>
    <task id="LOCAL-00030" summary="535. Encode and Decode TinyURL&#10;Medium&#10;1.9K&#10;3.6K&#10;Companies&#10;Note: This is a companion problem to the System Design problem: Design TinyURL.&#10;TinyURL is a URL shortening service where you enter a URL such as https://leetcode.com/problems/design-tinyurl and it returns a short URL such as http://tinyurl.com/4e9iAk. Design a class to encode a URL and decode a tiny URL.&#10;&#10;There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.&#10;&#10;Implement the Solution class:&#10;&#10;Solution() Initializes the object of the system.&#10;String encode(String longUrl) Returns a tiny URL for the given longUrl.&#10;String decode(String shortUrl) Returns the original long URL for the given shortUrl. It is guaranteed that the given shortUrl was encoded by the same object.&#10; &#10;&#10;Example 1:&#10;&#10;Input: url = &quot;https://leetcode.com/problems/design-tinyurl&quot;&#10;Output: &quot;https://leetcode.com/problems/design-tinyurl&quot;&#10;&#10;Explanation:&#10;Solution obj = new Solution();&#10;string tiny = obj.encode(url); // returns the encoded tiny url.&#10;string ans = obj.decode(tiny); // returns the original url after decoding it.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= url.length &lt;= 104&#10;url is guranteed to be a valid URL.&#10;Accepted&#10;236.1K&#10;Submissions&#10;274.3K&#10;Acceptance Rate&#10;86.1%">
      <created>1691682191269</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1691682191270</updated>
    </task>
    <task id="LOCAL-00031" summary="7. Reverse Integer&#10;Medium&#10;11.6K&#10;12.8K&#10;Companies&#10;Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.&#10;&#10;Assume the environment does not allow you to store 64-bit integers (signed or unsigned).&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: x = 123&#10;Output: 321&#10;Example 2:&#10;&#10;Input: x = -123&#10;Output: -321&#10;Example 3:&#10;&#10;Input: x = 120&#10;Output: 21&#10; &#10;&#10;Constraints:&#10;&#10;-231 &lt;= x &lt;= 231 - 1">
      <created>1693416832271</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1693416832271</updated>
    </task>
    <option name="localTasksCounter" value="32" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="1732. Find the Highest Altitude" />
    <MESSAGE value="724. Find Pivot Index" />
    <MESSAGE value="389. Find the Difference&#10;Easy&#10;4K&#10;434&#10;Companies&#10;You are given two strings s and t.&#10;&#10;String t is generated by random shuffling string s and then add one more letter at a random position.&#10;&#10;Return the letter that was added to t.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: s = &quot;abcd&quot;, t = &quot;abcde&quot;&#10;Output: &quot;e&quot;&#10;Explanation: 'e' is the letter that was added.&#10;Example 2:&#10;&#10;Input: s = &quot;&quot;, t = &quot;y&quot;&#10;Output: &quot;y&quot;&#10; &#10;&#10;Constraints:&#10;&#10;0 &lt;= s.length &lt;= 1000&#10;t.length == s.length + 1&#10;s and t consist of lowercase English letters." />
    <MESSAGE value="242. Valid Anagram" />
    <MESSAGE value="459 Repeated SubstringPattern" />
    <MESSAGE value="101 SymmetricTree" />
    <MESSAGE value="896 MonotonicArray" />
    <MESSAGE value="1822 SignOfTheProductOfAnArray" />
    <MESSAGE value="1502 ArithmeticProgressionFromSequence" />
    <MESSAGE value="709 To Lower Case" />
    <MESSAGE value="1523. Count Odd Numbers in an Interval Range" />
    <MESSAGE value="657. Robot Return to Origin&#10;Easy&#10;2.2K&#10;734&#10;Companies&#10;There is a robot starting at the position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.&#10;&#10;You are given a string moves that represents the move sequence of the robot where moves[i] represents its ith move. Valid moves are 'R' (right), 'L' (left), 'U' (up), and 'D' (down).&#10;&#10;Return true if the robot returns to the origin after it finishes all of its moves, or false otherwise.&#10;&#10;Note: The way that the robot is &quot;facing&quot; is irrelevant. 'R' will always make the robot move to the right once, 'L' will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same for each move.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: moves = &quot;UD&quot;&#10;Output: true&#10;Explanation: The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.&#10;Example 2:&#10;&#10;Input: moves = &quot;LL&quot;&#10;Output: false&#10;Explanation: The robot moves left twice. It ends up two &quot;moves&quot; to the left of the origin. We return false because it is not at the origin at the end of its moves.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= moves.length &lt;= 2 * 104&#10;moves only contains the characters 'U', 'D', 'L' and 'R'." />
    <MESSAGE value="860. Lemonade Change&#10;Easy&#10;2K&#10;145&#10;Companies&#10;At a lemonade stand, each lemonade costs $5. Customers are standing in a queue to buy from you and order one at a time (in the order specified by bills). Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill. You must provide the correct change to each customer so that the net transaction is that the customer pays $5.&#10;&#10;Note that you do not have any change in hand at first.&#10;&#10;Given an integer array bills where bills[i] is the bill the ith customer pays, return true if you can provide every customer with the correct change, or false otherwise.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: bills = [5,5,5,10,20]&#10;Output: true&#10;Explanation: &#10;From the first 3 customers, we collect three $5 bills in order.&#10;From the fourth customer, we collect a $10 bill and give back a $5.&#10;From the fifth customer, we give a $10 bill and a $5 bill.&#10;Since all customers got correct change, we output true.&#10;Example 2:&#10;&#10;Input: bills = [5,5,10,10,20]&#10;Output: false&#10;Explanation: &#10;From the first two customers in order, we collect two $5 bills.&#10;For the next two customers in order, we collect a $10 bill and give back a $5 bill.&#10;For the last customer, we can not give the change of $15 back because we only have two $10 bills.&#10;Since not every customer received the correct change, the answer is false.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= bills.length &lt;= 105&#10;bills[i] is either 5, 10, or 20.&#10;Accepted&#10;140.7K&#10;Submissions&#10;265.5K&#10;Acceptance Rate&#10;53.0%" />
    <MESSAGE value="21. Merge Two Sorted Lists&#10;Easy&#10;19.2K&#10;1.8K&#10;Companies&#10;You are given the heads of two sorted linked lists list1 and list2.&#10;&#10;Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.&#10;&#10;Return the head of the merged linked list.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: list1 = [1,2,4], list2 = [1,3,4]&#10;Output: [1,1,2,3,4,4]&#10;Example 2:&#10;&#10;Input: list1 = [], list2 = []&#10;Output: []&#10;Example 3:&#10;&#10;Input: list1 = [], list2 = [0]&#10;Output: [0]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in both lists is in the range [0, 50].&#10;-100 &lt;= Node.val &lt;= 100&#10;Both list1 and list2 are sorted in non-decreasing order." />
    <MESSAGE value="2. Add Two Numbers&#10;Medium&#10;27.3K&#10;5.2K&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [7,0,8]&#10;Explanation: 342 + 465 = 807.&#10;Example 2:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10;Example 3:&#10;&#10;Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]&#10;Output: [8,9,9,9,0,0,0,1]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.&#10;Accepted&#10;3.8M&#10;Submissions&#10;9.2M&#10;Acceptance Rate&#10;40.9%" />
    <MESSAGE value="445. Add Two Numbers II&#10;Medium&#10;5.5K&#10;278&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [7,2,4,3], l2 = [5,6,4]&#10;Output: [7,8,0,7]&#10;Example 2:&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [8,0,7]&#10;Example 3:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros." />
    <MESSAGE value="1232. Check If It Is a Straight Line&#10;Easy&#10;2.4K&#10;260&#10;Companies&#10;You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.&#10;&#10; &#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;&#10;Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]&#10;Output: true&#10;Example 2:&#10;&#10;&#10;&#10;Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]&#10;Output: false&#10; &#10;&#10;Constraints:&#10;&#10;2 &lt;= coordinates.length &lt;= 1000&#10;coordinates[i].length == 2&#10;-10^4 &lt;= coordinates[i][0], coordinates[i][1] &lt;= 10^4&#10;coordinates contains no duplicate point.&#10;Accepted&#10;233.6K&#10;Submissions&#10;583.3K&#10;Acceptance Rate&#10;40.0%" />
    <MESSAGE value="2181. Merge Nodes in Between Zeros&#10;Medium&#10;1.4K&#10;26&#10;Companies&#10;You are given the head of a linked list, which contains a series of integers separated by 0's. The beginning and end of the linked list will have Node.val == 0.&#10;&#10;For every two consecutive 0's, merge all the nodes lying in between them into a single node whose value is the sum of all the merged nodes. The modified list should not contain any 0's.&#10;&#10;Return the head of the modified linked list.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: head = [0,3,1,0,4,5,2,0]&#10;Output: [4,11]&#10;Explanation: &#10;The above figure represents the given linked list. The modified list contains&#10;- The sum of the nodes marked in green: 3 + 1 = 4.&#10;- The sum of the nodes marked in red: 4 + 5 + 2 = 11.&#10;Example 2:&#10;&#10;&#10;Input: head = [0,1,0,3,0,2,2,0]&#10;Output: [1,3,4]&#10;Explanation: &#10;The above figure represents the given linked list. The modified list contains&#10;- The sum of the nodes marked in green: 1 = 1.&#10;- The sum of the nodes marked in red: 3 = 3.&#10;- The sum of the nodes marked in yellow: 2 + 2 = 4.&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in the list is in the range [3, 2 * 105].&#10;0 &lt;= Node.val &lt;= 1000&#10;There are no two consecutive nodes with Node.val == 0.&#10;The beginning and end of the linked list have Node.val == 0.&#10;Accepted&#10;83.1K&#10;Submissions&#10;96.6K&#10;Acceptance Rate&#10;86.0%" />
    <MESSAGE value="MaximumTwinSumOfALinkedList2130" />
    <MESSAGE value="705. Design HashSet&#10;Easy&#10;3.5K&#10;283&#10;Companies&#10;Design a HashSet without using any built-in hash table libraries.&#10;&#10;Implement MyHashSet class:&#10;&#10;void add(key) Inserts the value key into the HashSet.&#10;bool contains(key) Returns whether the value key exists in the HashSet or not.&#10;void remove(key) Removes the value key in the HashSet. If key does not exist in the HashSet, do nothing.&#10; &#10;&#10;Example 1:&#10;&#10;Input&#10;[&quot;MyHashSet&quot;, &quot;add&quot;, &quot;add&quot;, &quot;contains&quot;, &quot;contains&quot;, &quot;add&quot;, &quot;contains&quot;, &quot;remove&quot;, &quot;contains&quot;]&#10;[[], [1], [2], [1], [3], [2], [2], [2], [2]]&#10;Output&#10;[null, null, null, true, false, null, true, null, false]&#10;&#10;Explanation&#10;MyHashSet myHashSet = new MyHashSet();&#10;myHashSet.add(1);      // set = [1]&#10;myHashSet.add(2);      // set = [1, 2]&#10;myHashSet.contains(1); // return True&#10;myHashSet.contains(3); // return False, (not found)&#10;myHashSet.add(2);      // set = [1, 2]&#10;myHashSet.contains(2); // return True&#10;myHashSet.remove(2);   // set = [1]&#10;myHashSet.contains(2); // return False, (already removed)&#10; &#10;&#10;Constraints:&#10;&#10;0 &lt;= key &lt;= 106&#10;At most 104 calls will be made to add, remove, and contains.&#10;Accepted&#10;355.2K&#10;Submissions&#10;528.4K&#10;Acceptance Rate&#10;67.2%" />
    <MESSAGE value="50. Pow(x, n)&#10;Medium&#10;8.4K&#10;8.3K&#10;Companies&#10;Implement pow(x, n), which calculates x raised to the power n (i.e., xn).&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: x = 2.00000, n = 10&#10;Output: 1024.00000&#10;Example 2:&#10;&#10;Input: x = 2.10000, n = 3&#10;Output: 9.26100&#10;Example 3:&#10;&#10;Input: x = 2.00000, n = -2&#10;Output: 0.25000&#10;Explanation: 2-2 = 1/22 = 1/4 = 0.25&#10; &#10;&#10;Constraints:&#10;&#10;-100.0 &lt; x &lt; 100.0&#10;-231 &lt;= n &lt;= 231-1&#10;n is an integer.&#10;Either x is not zero or n &gt; 0.&#10;-104 &lt;= xn &lt;= 104&#10;Accepted&#10;1.3M&#10;Submissions&#10;3.9M&#10;Acceptance Rate&#10;33.9%" />
    <MESSAGE value="682. Baseball Game&#10;Easy&#10;2.5K&#10;1.8K&#10;Companies&#10;You are keeping the scores for a baseball game with strange rules. At the beginning of the game, you start with an empty record.&#10;&#10;You are given a list of strings operations, where operations[i] is the ith operation you must apply to the record and is one of the following:&#10;&#10;An integer x.&#10;Record a new score of x.&#10;'+'.&#10;Record a new score that is the sum of the previous two scores.&#10;'D'.&#10;Record a new score that is the double of the previous score.&#10;'C'.&#10;Invalidate the previous score, removing it from the record.&#10;Return the sum of all the scores on the record after applying all the operations.&#10;&#10;The test cases are generated such that the answer and all intermediate calculations fit in a 32-bit integer and that all operations are valid.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: ops = [&quot;5&quot;,&quot;2&quot;,&quot;C&quot;,&quot;D&quot;,&quot;+&quot;]&#10;Output: 30&#10;Explanation:&#10;&quot;5&quot; - Add 5 to the record, record is now [5].&#10;&quot;2&quot; - Add 2 to the record, record is now [5, 2].&#10;&quot;C&quot; - Invalidate and remove the previous score, record is now [5].&#10;&quot;D&quot; - Add 2 * 5 = 10 to the record, record is now [5, 10].&#10;&quot;+&quot; - Add 5 + 10 = 15 to the record, record is now [5, 10, 15].&#10;The total sum is 5 + 10 + 15 = 30.&#10;Example 2:&#10;&#10;Input: ops = [&quot;5&quot;,&quot;-2&quot;,&quot;4&quot;,&quot;C&quot;,&quot;D&quot;,&quot;9&quot;,&quot;+&quot;,&quot;+&quot;]&#10;Output: 27&#10;Explanation:&#10;&quot;5&quot; - Add 5 to the record, record is now [5].&#10;&quot;-2&quot; - Add -2 to the record, record is now [5, -2].&#10;&quot;4&quot; - Add 4 to the record, record is now [5, -2, 4].&#10;&quot;C&quot; - Invalidate and remove the previous score, record is now [5, -2].&#10;&quot;D&quot; - Add 2 * -2 = -4 to the record, record is now [5, -2, -4].&#10;&quot;9&quot; - Add 9 to the record, record is now [5, -2, -4, 9].&#10;&quot;+&quot; - Add -4 + 9 = 5 to the record, record is now [5, -2, -4, 9, 5].&#10;&quot;+&quot; - Add 9 + 5 = 14 to the record, record is now [5, -2, -4, 9, 5, 14].&#10;The total sum is 5 + -2 + -4 + 9 + 5 + 14 = 27.&#10;Example 3:&#10;&#10;Input: ops = [&quot;1&quot;,&quot;C&quot;]&#10;Output: 0&#10;Explanation:&#10;&quot;1&quot; - Add 1 to the record, record is now [1].&#10;&quot;C&quot; - Invalidate and remove the previous score, record is now [].&#10;Since the record is empty, the total sum is 0.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= operations.length &lt;= 1000&#10;operations[i] is &quot;C&quot;, &quot;D&quot;, &quot;+&quot;, or a string representing an integer in the range [-3 * 104, 3 * 104].&#10;For operation &quot;+&quot;, there will always be at least two previous scores on the record.&#10;For operations &quot;C&quot; and &quot;D&quot;, there will always be at least one previous score on the record." />
    <MESSAGE value="771. Jewels and Stones&#10;Easy&#10;4.7K&#10;556&#10;Companies&#10;You're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. Each character in stones is a type of stone you have. You want to know how many of the stones you have are also jewels.&#10;&#10;Letters are case sensitive, so &quot;a&quot; is considered a different type of stone from &quot;A&quot;.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: jewels = &quot;aA&quot;, stones = &quot;aAAbbbb&quot;&#10;Output: 3&#10;Example 2:&#10;&#10;Input: jewels = &quot;z&quot;, stones = &quot;ZZ&quot;&#10;Output: 0&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= jewels.length, stones.length &lt;= 50&#10;jewels and stones consist of only English letters.&#10;All the characters of jewels are unique." />
    <MESSAGE value="535. Encode and Decode TinyURL&#10;Medium&#10;1.9K&#10;3.6K&#10;Companies&#10;Note: This is a companion problem to the System Design problem: Design TinyURL.&#10;TinyURL is a URL shortening service where you enter a URL such as https://leetcode.com/problems/design-tinyurl and it returns a short URL such as http://tinyurl.com/4e9iAk. Design a class to encode a URL and decode a tiny URL.&#10;&#10;There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.&#10;&#10;Implement the Solution class:&#10;&#10;Solution() Initializes the object of the system.&#10;String encode(String longUrl) Returns a tiny URL for the given longUrl.&#10;String decode(String shortUrl) Returns the original long URL for the given shortUrl. It is guaranteed that the given shortUrl was encoded by the same object.&#10; &#10;&#10;Example 1:&#10;&#10;Input: url = &quot;https://leetcode.com/problems/design-tinyurl&quot;&#10;Output: &quot;https://leetcode.com/problems/design-tinyurl&quot;&#10;&#10;Explanation:&#10;Solution obj = new Solution();&#10;string tiny = obj.encode(url); // returns the encoded tiny url.&#10;string ans = obj.decode(tiny); // returns the original url after decoding it.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= url.length &lt;= 104&#10;url is guranteed to be a valid URL.&#10;Accepted&#10;236.1K&#10;Submissions&#10;274.3K&#10;Acceptance Rate&#10;86.1%" />
    <MESSAGE value="7. Reverse Integer&#10;Medium&#10;11.6K&#10;12.8K&#10;Companies&#10;Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.&#10;&#10;Assume the environment does not allow you to store 64-bit integers (signed or unsigned).&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: x = 123&#10;Output: 321&#10;Example 2:&#10;&#10;Input: x = -123&#10;Output: -321&#10;Example 3:&#10;&#10;Input: x = 120&#10;Output: 21&#10; &#10;&#10;Constraints:&#10;&#10;-231 &lt;= x &lt;= 231 - 1" />
    <option name="LAST_COMMIT_MESSAGE" value="7. Reverse Integer&#10;Medium&#10;11.6K&#10;12.8K&#10;Companies&#10;Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.&#10;&#10;Assume the environment does not allow you to store 64-bit integers (signed or unsigned).&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: x = 123&#10;Output: 321&#10;Example 2:&#10;&#10;Input: x = -123&#10;Output: -321&#10;Example 3:&#10;&#10;Input: x = 120&#10;Output: 21&#10; &#10;&#10;Constraints:&#10;&#10;-231 &lt;= x &lt;= 231 - 1" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/PalindromeNumber_9.java</url>
          <line>40</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/LargestSubString.java</url>
          <line>6</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/findMaxAverage_643.java</url>
          <line>14</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ValidPalindrome125.java</url>
          <line>42</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/TwoSum_II_InputArrayIsSorted167.java</url>
          <line>16</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/WordPattern_290.java</url>
          <line>12</line>
          <option name="timeStamp" value="14" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/WordPattern_290.java</url>
          <line>19</line>
          <option name="timeStamp" value="15" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/FindTheHighestAltitude1732.java</url>
          <line>11</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ValidAnagram_242.java</url>
          <line>15</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/RepeatedSubstringPattern459.java</url>
          <line>27</line>
          <option name="timeStamp" value="38" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/SymmetricTree101.java</url>
          <line>27</line>
          <option name="timeStamp" value="39" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/SymmetricTree101.java</url>
          <line>30</line>
          <option name="timeStamp" value="40" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/RepeatedSubstringPattern459.java</url>
          <line>17</line>
          <option name="timeStamp" value="41" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/SymmetricTree101.java</url>
          <line>24</line>
          <option name="timeStamp" value="42" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MonotonicArray896.java</url>
          <line>58</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ArithmeticProgressionFromSequence1502.java</url>
          <line>14</line>
          <option name="timeStamp" value="49" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/CountOddNumbersInAnIntervalRange1523.java</url>
          <line>10</line>
          <option name="timeStamp" value="50" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AverageSalaryExcludingTheMinimumAndMaximumSalary1491.java</url>
          <line>12</line>
          <option name="timeStamp" value="51" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/RobotReturn2Origin657.java</url>
          <line>12</line>
          <option name="timeStamp" value="52" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/LemonadeChange860.java</url>
          <line>10</line>
          <option name="timeStamp" value="53" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MergeTwoSortedLists21.java</url>
          <line>31</line>
          <option name="timeStamp" value="54" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ReverseLinkedList206.java</url>
          <line>18</line>
          <option name="timeStamp" value="55" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AddTwoNumbers02.java</url>
          <line>5</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AddTwoNumbers02.java</url>
          <line>9</line>
          <option name="timeStamp" value="62" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AddTwoNumbersII.java</url>
          <line>25</line>
          <option name="timeStamp" value="63" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AddTwoNumbersII.java</url>
          <line>20</line>
          <option name="timeStamp" value="64" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/CheckIfItIsAStraightLine1232.java</url>
          <line>13</line>
          <option name="timeStamp" value="65" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/CheckIfItIsAStraightLine1232.java</url>
          <line>26</line>
          <option name="timeStamp" value="67" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/CheckIfItIsAStraightLine1232.java</url>
          <line>17</line>
          <option name="timeStamp" value="68" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MergeNodesInBetweenZeros2181.java</url>
          <line>11</line>
          <option name="timeStamp" value="69" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MergeNodesInBetweenZeros2181.java</url>
          <line>18</line>
          <option name="timeStamp" value="70" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MaximumTwinSumOfALinkedList2130.java</url>
          <line>41</line>
          <option name="timeStamp" value="78" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MaximumTwinSumOfALinkedList2130.java</url>
          <line>26</line>
          <option name="timeStamp" value="80" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/DesignHashMap706.java</url>
          <line>13</line>
          <option name="timeStamp" value="88" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/DesignHashMap706.java</url>
          <line>17</line>
          <option name="timeStamp" value="89" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/DesignHashMap706.java</url>
          <line>21</line>
          <option name="timeStamp" value="90" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Pow_50.java</url>
          <line>41</line>
          <option name="timeStamp" value="106" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Pow_50.java</url>
          <line>24</line>
          <option name="timeStamp" value="109" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/BaseballGame682.java</url>
          <line>13</line>
          <option name="timeStamp" value="117" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/FindWinnerOnATicTacToeGame1275.java</url>
          <line>18</line>
          <option name="timeStamp" value="124" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MatrixDiagonalSum1572.java</url>
          <line>9</line>
          <option name="timeStamp" value="127" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ReverseWordsInAStringIII_557.java</url>
          <line>6</line>
          <option name="timeStamp" value="142" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Jewels_and_Stones771.java</url>
          <line>18</line>
          <option name="timeStamp" value="143" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Reverse_Words_in_a_String151.java</url>
          <line>12</line>
          <option name="timeStamp" value="144" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Reverse_Words_in_a_String151.java</url>
          <line>5</line>
          <option name="timeStamp" value="145" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/Reverse_Words_in_a_String151.java</url>
          <line>6</line>
          <option name="timeStamp" value="146" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ReverseInteger7.java</url>
          <line>13</line>
          <option name="timeStamp" value="153" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ReverseInteger7.java</url>
          <line>23</line>
          <option name="timeStamp" value="156" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ContainerWithMostWater11.java</url>
          <line>7</line>
          <option name="timeStamp" value="157" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ValidPalindrome125.java</url>
          <line>4</line>
          <properties class="org.example.ValidPalindrome125" method="main">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>