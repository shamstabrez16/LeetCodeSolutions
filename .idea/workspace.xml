<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3473ac9c-5f98-4397-b462-e088cccabc3d" name="Changes" comment="1232. Check If It Is a Straight Line&#10;Easy&#10;2.4K&#10;260&#10;Companies&#10;You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.&#10;&#10; &#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;&#10;Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]&#10;Output: true&#10;Example 2:&#10;&#10;&#10;&#10;Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]&#10;Output: false&#10; &#10;&#10;Constraints:&#10;&#10;2 &lt;= coordinates.length &lt;= 1000&#10;coordinates[i].length == 2&#10;-10^4 &lt;= coordinates[i][0], coordinates[i][1] &lt;= 10^4&#10;coordinates contains no duplicate point.&#10;Accepted&#10;233.6K&#10;Submissions&#10;583.3K&#10;Acceptance Rate&#10;40.0%">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/MergeNodesInBetweenZeros2181.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="1232._Check_If_It_Is_a_Straight_Line_" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2R5iVzZY5DD3dvDNPJOkHC084q7" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "2181.__Merge__Nodes__in__Between__Zeros__",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/springApps/LeetCodeSolutions"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\springApps\LeetCodeSolutions\src\main\java\org\example" />
    </key>
  </component>
  <component name="RunManager" selected="Application.MergeNodesInBetweenZeros2181">
    <configuration name="AddTwoNumbers02" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.AddTwoNumbers02" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AddTwoNumbersII" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.AddTwoNumbersII" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CheckIfItIsAStraightLine1232" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.CheckIfItIsAStraightLine1232" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MergeNodesInBetweenZeros2181" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.MergeNodesInBetweenZeros2181" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReverseLinkedList206" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.ReverseLinkedList206" />
      <module name="LeetCodeSolutions" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.MergeNodesInBetweenZeros2181" />
        <item itemvalue="Application.CheckIfItIsAStraightLine1232" />
        <item itemvalue="Application.AddTwoNumbersII" />
        <item itemvalue="Application.AddTwoNumbers02" />
        <item itemvalue="Application.ReverseLinkedList206" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3473ac9c-5f98-4397-b462-e088cccabc3d" name="Changes" comment="" />
      <created>1686546374206</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1686546374206</updated>
    </task>
    <task id="LOCAL-00001" summary="125. Valid Palindrome">
      <created>1689712950973</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1689712950973</updated>
    </task>
    <task id="LOCAL-00002" summary="392 Is Subsequence">
      <created>1689713342778</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1689713342778</updated>
    </task>
    <task id="LOCAL-00003" summary="&#10;167. Two Sum II - Input Array Is Sorted">
      <created>1689716995407</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1689716995407</updated>
    </task>
    <task id="LOCAL-00004" summary="1732. Find the Highest Altitude">
      <created>1689718232550</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1689718232550</updated>
    </task>
    <task id="LOCAL-00005" summary="724. Find Pivot Index">
      <created>1689778962096</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1689778962096</updated>
    </task>
    <task id="LOCAL-00006" summary="724. Find Pivot Index">
      <created>1689778974982</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1689778974982</updated>
    </task>
    <task id="LOCAL-00007" summary="389. Find the Difference&#10;Easy&#10;4K&#10;434&#10;Companies&#10;You are given two strings s and t.&#10;&#10;String t is generated by random shuffling string s and then add one more letter at a random position.&#10;&#10;Return the letter that was added to t.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: s = &quot;abcd&quot;, t = &quot;abcde&quot;&#10;Output: &quot;e&quot;&#10;Explanation: 'e' is the letter that was added.&#10;Example 2:&#10;&#10;Input: s = &quot;&quot;, t = &quot;y&quot;&#10;Output: &quot;y&quot;&#10; &#10;&#10;Constraints:&#10;&#10;0 &lt;= s.length &lt;= 1000&#10;t.length == s.length + 1&#10;s and t consist of lowercase English letters.">
      <created>1689781635816</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1689781635816</updated>
    </task>
    <task id="LOCAL-00008" summary="242. Valid Anagram">
      <created>1689785810638</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1689785810638</updated>
    </task>
    <task id="LOCAL-00009" summary="459 Repeated SubstringPattern">
      <created>1689794027450</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1689794027451</updated>
    </task>
    <task id="LOCAL-00010" summary="101 SymmetricTree">
      <created>1689796419531</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1689796419531</updated>
    </task>
    <task id="LOCAL-00011" summary="896 MonotonicArray">
      <created>1689802767604</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1689802767604</updated>
    </task>
    <task id="LOCAL-00012" summary="1822 SignOfTheProductOfAnArray">
      <created>1689803261004</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1689803261004</updated>
    </task>
    <task id="LOCAL-00013" summary="1502 ArithmeticProgressionFromSequence">
      <created>1689803811015</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1689803811015</updated>
    </task>
    <task id="LOCAL-00014" summary="709 To Lower Case">
      <created>1689804091651</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1689804091651</updated>
    </task>
    <task id="LOCAL-00015" summary="1523. Count Odd Numbers in an Interval Range">
      <created>1689913750689</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1689913750689</updated>
    </task>
    <task id="LOCAL-00016" summary="657. Robot Return to Origin&#10;Easy&#10;2.2K&#10;734&#10;Companies&#10;There is a robot starting at the position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.&#10;&#10;You are given a string moves that represents the move sequence of the robot where moves[i] represents its ith move. Valid moves are 'R' (right), 'L' (left), 'U' (up), and 'D' (down).&#10;&#10;Return true if the robot returns to the origin after it finishes all of its moves, or false otherwise.&#10;&#10;Note: The way that the robot is &quot;facing&quot; is irrelevant. 'R' will always make the robot move to the right once, 'L' will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same for each move.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: moves = &quot;UD&quot;&#10;Output: true&#10;Explanation: The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.&#10;Example 2:&#10;&#10;Input: moves = &quot;LL&quot;&#10;Output: false&#10;Explanation: The robot moves left twice. It ends up two &quot;moves&quot; to the left of the origin. We return false because it is not at the origin at the end of its moves.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= moves.length &lt;= 2 * 104&#10;moves only contains the characters 'U', 'D', 'L' and 'R'.">
      <created>1690170176862</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1690170176862</updated>
    </task>
    <task id="LOCAL-00017" summary="860. Lemonade Change&#10;Easy&#10;2K&#10;145&#10;Companies&#10;At a lemonade stand, each lemonade costs $5. Customers are standing in a queue to buy from you and order one at a time (in the order specified by bills). Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill. You must provide the correct change to each customer so that the net transaction is that the customer pays $5.&#10;&#10;Note that you do not have any change in hand at first.&#10;&#10;Given an integer array bills where bills[i] is the bill the ith customer pays, return true if you can provide every customer with the correct change, or false otherwise.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: bills = [5,5,5,10,20]&#10;Output: true&#10;Explanation: &#10;From the first 3 customers, we collect three $5 bills in order.&#10;From the fourth customer, we collect a $10 bill and give back a $5.&#10;From the fifth customer, we give a $10 bill and a $5 bill.&#10;Since all customers got correct change, we output true.&#10;Example 2:&#10;&#10;Input: bills = [5,5,10,10,20]&#10;Output: false&#10;Explanation: &#10;From the first two customers in order, we collect two $5 bills.&#10;For the next two customers in order, we collect a $10 bill and give back a $5 bill.&#10;For the last customer, we can not give the change of $15 back because we only have two $10 bills.&#10;Since not every customer received the correct change, the answer is false.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= bills.length &lt;= 105&#10;bills[i] is either 5, 10, or 20.&#10;Accepted&#10;140.7K&#10;Submissions&#10;265.5K&#10;Acceptance Rate&#10;53.0%">
      <created>1690172670160</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1690172670160</updated>
    </task>
    <task id="LOCAL-00018" summary="21. Merge Two Sorted Lists&#10;Easy&#10;19.2K&#10;1.8K&#10;Companies&#10;You are given the heads of two sorted linked lists list1 and list2.&#10;&#10;Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.&#10;&#10;Return the head of the merged linked list.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: list1 = [1,2,4], list2 = [1,3,4]&#10;Output: [1,1,2,3,4,4]&#10;Example 2:&#10;&#10;Input: list1 = [], list2 = []&#10;Output: []&#10;Example 3:&#10;&#10;Input: list1 = [], list2 = [0]&#10;Output: [0]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in both lists is in the range [0, 50].&#10;-100 &lt;= Node.val &lt;= 100&#10;Both list1 and list2 are sorted in non-decreasing order.">
      <created>1690407187193</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1690407187193</updated>
    </task>
    <task id="LOCAL-00019" summary="2. Add Two Numbers&#10;Medium&#10;27.3K&#10;5.2K&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [7,0,8]&#10;Explanation: 342 + 465 = 807.&#10;Example 2:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10;Example 3:&#10;&#10;Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]&#10;Output: [8,9,9,9,0,0,0,1]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.&#10;Accepted&#10;3.8M&#10;Submissions&#10;9.2M&#10;Acceptance Rate&#10;40.9%">
      <created>1690469279201</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1690469279201</updated>
    </task>
    <task id="LOCAL-00020" summary="2. Add Two Numbers&#10;Medium&#10;27.3K&#10;5.2K&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [7,0,8]&#10;Explanation: 342 + 465 = 807.&#10;Example 2:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10;Example 3:&#10;&#10;Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]&#10;Output: [8,9,9,9,0,0,0,1]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.&#10;Accepted&#10;3.8M&#10;Submissions&#10;9.2M&#10;Acceptance Rate&#10;40.9%">
      <created>1690469322113</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1690469322113</updated>
    </task>
    <task id="LOCAL-00021" summary="2. Add Two Numbers&#10;Medium&#10;27.3K&#10;5.2K&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [7,0,8]&#10;Explanation: 342 + 465 = 807.&#10;Example 2:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10;Example 3:&#10;&#10;Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]&#10;Output: [8,9,9,9,0,0,0,1]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.&#10;Accepted&#10;3.8M&#10;Submissions&#10;9.2M&#10;Acceptance Rate&#10;40.9%">
      <created>1690469345688</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1690469345688</updated>
    </task>
    <task id="LOCAL-00022" summary="445. Add Two Numbers II&#10;Medium&#10;5.5K&#10;278&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [7,2,4,3], l2 = [5,6,4]&#10;Output: [7,8,0,7]&#10;Example 2:&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [8,0,7]&#10;Example 3:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.">
      <created>1690470539887</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1690470539887</updated>
    </task>
    <task id="LOCAL-00023" summary="1232. Check If It Is a Straight Line&#10;Easy&#10;2.4K&#10;260&#10;Companies&#10;You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.&#10;&#10; &#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;&#10;Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]&#10;Output: true&#10;Example 2:&#10;&#10;&#10;&#10;Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]&#10;Output: false&#10; &#10;&#10;Constraints:&#10;&#10;2 &lt;= coordinates.length &lt;= 1000&#10;coordinates[i].length == 2&#10;-10^4 &lt;= coordinates[i][0], coordinates[i][1] &lt;= 10^4&#10;coordinates contains no duplicate point.&#10;Accepted&#10;233.6K&#10;Submissions&#10;583.3K&#10;Acceptance Rate&#10;40.0%">
      <created>1690474169600</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1690474169600</updated>
    </task>
    <option name="localTasksCounter" value="24" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="125. Valid Palindrome" />
    <MESSAGE value="392 Is Subsequence" />
    <MESSAGE value="&#10;167. Two Sum II - Input Array Is Sorted" />
    <MESSAGE value="1732. Find the Highest Altitude" />
    <MESSAGE value="724. Find Pivot Index" />
    <MESSAGE value="389. Find the Difference&#10;Easy&#10;4K&#10;434&#10;Companies&#10;You are given two strings s and t.&#10;&#10;String t is generated by random shuffling string s and then add one more letter at a random position.&#10;&#10;Return the letter that was added to t.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: s = &quot;abcd&quot;, t = &quot;abcde&quot;&#10;Output: &quot;e&quot;&#10;Explanation: 'e' is the letter that was added.&#10;Example 2:&#10;&#10;Input: s = &quot;&quot;, t = &quot;y&quot;&#10;Output: &quot;y&quot;&#10; &#10;&#10;Constraints:&#10;&#10;0 &lt;= s.length &lt;= 1000&#10;t.length == s.length + 1&#10;s and t consist of lowercase English letters." />
    <MESSAGE value="242. Valid Anagram" />
    <MESSAGE value="459 Repeated SubstringPattern" />
    <MESSAGE value="101 SymmetricTree" />
    <MESSAGE value="896 MonotonicArray" />
    <MESSAGE value="1822 SignOfTheProductOfAnArray" />
    <MESSAGE value="1502 ArithmeticProgressionFromSequence" />
    <MESSAGE value="709 To Lower Case" />
    <MESSAGE value="1523. Count Odd Numbers in an Interval Range" />
    <MESSAGE value="657. Robot Return to Origin&#10;Easy&#10;2.2K&#10;734&#10;Companies&#10;There is a robot starting at the position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.&#10;&#10;You are given a string moves that represents the move sequence of the robot where moves[i] represents its ith move. Valid moves are 'R' (right), 'L' (left), 'U' (up), and 'D' (down).&#10;&#10;Return true if the robot returns to the origin after it finishes all of its moves, or false otherwise.&#10;&#10;Note: The way that the robot is &quot;facing&quot; is irrelevant. 'R' will always make the robot move to the right once, 'L' will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same for each move.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: moves = &quot;UD&quot;&#10;Output: true&#10;Explanation: The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.&#10;Example 2:&#10;&#10;Input: moves = &quot;LL&quot;&#10;Output: false&#10;Explanation: The robot moves left twice. It ends up two &quot;moves&quot; to the left of the origin. We return false because it is not at the origin at the end of its moves.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= moves.length &lt;= 2 * 104&#10;moves only contains the characters 'U', 'D', 'L' and 'R'." />
    <MESSAGE value="860. Lemonade Change&#10;Easy&#10;2K&#10;145&#10;Companies&#10;At a lemonade stand, each lemonade costs $5. Customers are standing in a queue to buy from you and order one at a time (in the order specified by bills). Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill. You must provide the correct change to each customer so that the net transaction is that the customer pays $5.&#10;&#10;Note that you do not have any change in hand at first.&#10;&#10;Given an integer array bills where bills[i] is the bill the ith customer pays, return true if you can provide every customer with the correct change, or false otherwise.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;Input: bills = [5,5,5,10,20]&#10;Output: true&#10;Explanation: &#10;From the first 3 customers, we collect three $5 bills in order.&#10;From the fourth customer, we collect a $10 bill and give back a $5.&#10;From the fifth customer, we give a $10 bill and a $5 bill.&#10;Since all customers got correct change, we output true.&#10;Example 2:&#10;&#10;Input: bills = [5,5,10,10,20]&#10;Output: false&#10;Explanation: &#10;From the first two customers in order, we collect two $5 bills.&#10;For the next two customers in order, we collect a $10 bill and give back a $5 bill.&#10;For the last customer, we can not give the change of $15 back because we only have two $10 bills.&#10;Since not every customer received the correct change, the answer is false.&#10; &#10;&#10;Constraints:&#10;&#10;1 &lt;= bills.length &lt;= 105&#10;bills[i] is either 5, 10, or 20.&#10;Accepted&#10;140.7K&#10;Submissions&#10;265.5K&#10;Acceptance Rate&#10;53.0%" />
    <MESSAGE value="21. Merge Two Sorted Lists&#10;Easy&#10;19.2K&#10;1.8K&#10;Companies&#10;You are given the heads of two sorted linked lists list1 and list2.&#10;&#10;Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.&#10;&#10;Return the head of the merged linked list.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: list1 = [1,2,4], list2 = [1,3,4]&#10;Output: [1,1,2,3,4,4]&#10;Example 2:&#10;&#10;Input: list1 = [], list2 = []&#10;Output: []&#10;Example 3:&#10;&#10;Input: list1 = [], list2 = [0]&#10;Output: [0]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in both lists is in the range [0, 50].&#10;-100 &lt;= Node.val &lt;= 100&#10;Both list1 and list2 are sorted in non-decreasing order." />
    <MESSAGE value="2. Add Two Numbers&#10;Medium&#10;27.3K&#10;5.2K&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [7,0,8]&#10;Explanation: 342 + 465 = 807.&#10;Example 2:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10;Example 3:&#10;&#10;Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]&#10;Output: [8,9,9,9,0,0,0,1]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros.&#10;Accepted&#10;3.8M&#10;Submissions&#10;9.2M&#10;Acceptance Rate&#10;40.9%" />
    <MESSAGE value="445. Add Two Numbers II&#10;Medium&#10;5.5K&#10;278&#10;Companies&#10;You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.&#10;&#10;You may assume the two numbers do not contain any leading zero, except the number 0 itself.&#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;Input: l1 = [7,2,4,3], l2 = [5,6,4]&#10;Output: [7,8,0,7]&#10;Example 2:&#10;&#10;Input: l1 = [2,4,3], l2 = [5,6,4]&#10;Output: [8,0,7]&#10;Example 3:&#10;&#10;Input: l1 = [0], l2 = [0]&#10;Output: [0]&#10; &#10;&#10;Constraints:&#10;&#10;The number of nodes in each linked list is in the range [1, 100].&#10;0 &lt;= Node.val &lt;= 9&#10;It is guaranteed that the list represents a number that does not have leading zeros." />
    <MESSAGE value="1232. Check If It Is a Straight Line&#10;Easy&#10;2.4K&#10;260&#10;Companies&#10;You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.&#10;&#10; &#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;&#10;Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]&#10;Output: true&#10;Example 2:&#10;&#10;&#10;&#10;Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]&#10;Output: false&#10; &#10;&#10;Constraints:&#10;&#10;2 &lt;= coordinates.length &lt;= 1000&#10;coordinates[i].length == 2&#10;-10^4 &lt;= coordinates[i][0], coordinates[i][1] &lt;= 10^4&#10;coordinates contains no duplicate point.&#10;Accepted&#10;233.6K&#10;Submissions&#10;583.3K&#10;Acceptance Rate&#10;40.0%" />
    <option name="LAST_COMMIT_MESSAGE" value="1232. Check If It Is a Straight Line&#10;Easy&#10;2.4K&#10;260&#10;Companies&#10;You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.&#10;&#10; &#10;&#10; &#10;&#10;Example 1:&#10;&#10;&#10;&#10;Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]&#10;Output: true&#10;Example 2:&#10;&#10;&#10;&#10;Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]&#10;Output: false&#10; &#10;&#10;Constraints:&#10;&#10;2 &lt;= coordinates.length &lt;= 1000&#10;coordinates[i].length == 2&#10;-10^4 &lt;= coordinates[i][0], coordinates[i][1] &lt;= 10^4&#10;coordinates contains no duplicate point.&#10;Accepted&#10;233.6K&#10;Submissions&#10;583.3K&#10;Acceptance Rate&#10;40.0%" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/PalindromeNumber_9.java</url>
          <line>40</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/LargestSubString.java</url>
          <line>6</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/findMaxAverage_643.java</url>
          <line>14</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ValidPalindrome125.java</url>
          <line>42</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/TwoSum_II_InputArrayIsSorted167.java</url>
          <line>16</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/WordPattern_290.java</url>
          <line>12</line>
          <option name="timeStamp" value="14" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/WordPattern_290.java</url>
          <line>19</line>
          <option name="timeStamp" value="15" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/FindTheHighestAltitude1732.java</url>
          <line>11</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ValidAnagram_242.java</url>
          <line>15</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/RepeatedSubstringPattern459.java</url>
          <line>27</line>
          <option name="timeStamp" value="38" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/SymmetricTree101.java</url>
          <line>27</line>
          <option name="timeStamp" value="39" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/SymmetricTree101.java</url>
          <line>30</line>
          <option name="timeStamp" value="40" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/RepeatedSubstringPattern459.java</url>
          <line>17</line>
          <option name="timeStamp" value="41" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/SymmetricTree101.java</url>
          <line>24</line>
          <option name="timeStamp" value="42" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MonotonicArray896.java</url>
          <line>58</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ArithmeticProgressionFromSequence1502.java</url>
          <line>14</line>
          <option name="timeStamp" value="49" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/CountOddNumbersInAnIntervalRange1523.java</url>
          <line>10</line>
          <option name="timeStamp" value="50" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AverageSalaryExcludingTheMinimumAndMaximumSalary1491.java</url>
          <line>12</line>
          <option name="timeStamp" value="51" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/RobotReturn2Origin657.java</url>
          <line>12</line>
          <option name="timeStamp" value="52" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/LemonadeChange860.java</url>
          <line>10</line>
          <option name="timeStamp" value="53" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MergeTwoSortedLists21.java</url>
          <line>31</line>
          <option name="timeStamp" value="54" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ReverseLinkedList206.java</url>
          <line>18</line>
          <option name="timeStamp" value="55" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AddTwoNumbers02.java</url>
          <line>5</line>
          <option name="timeStamp" value="60" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AddTwoNumbers02.java</url>
          <line>9</line>
          <option name="timeStamp" value="62" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AddTwoNumbersII.java</url>
          <line>25</line>
          <option name="timeStamp" value="63" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/AddTwoNumbersII.java</url>
          <line>20</line>
          <option name="timeStamp" value="64" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/CheckIfItIsAStraightLine1232.java</url>
          <line>13</line>
          <option name="timeStamp" value="65" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/CheckIfItIsAStraightLine1232.java</url>
          <line>26</line>
          <option name="timeStamp" value="67" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/CheckIfItIsAStraightLine1232.java</url>
          <line>17</line>
          <option name="timeStamp" value="68" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MergeNodesInBetweenZeros2181.java</url>
          <line>10</line>
          <option name="timeStamp" value="69" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/MergeNodesInBetweenZeros2181.java</url>
          <line>18</line>
          <option name="timeStamp" value="70" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/main/java/org/example/ValidPalindrome125.java</url>
          <line>4</line>
          <properties class="org.example.ValidPalindrome125" method="main">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>